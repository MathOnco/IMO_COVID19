timeline_plot<-timeline_plot + geom_text(data=df, aes(y=text_position,label=County),size=2.5, angle=45)
timeline_plot
# Given data a random direction
df <- peakData[c(1,2,4)]
colnames(df) <- c("County", "Peak", "Size")
df$Month <- format(df$Peak, '%b')
# Assign a Direction
directions = c(1,-1)
df$dir <- sample(directions, length(df$County), replace=TRUE)
# Offset days as well for labels.
directions = c(-2,0,2)
df$Peak = df$Peak + sample(directions, length(df$County), replace=TRUE)
# Offset Labels
text_offset <- 0.5
df$month_count <- ave(df$Peak==df$Peak, df$Peak, FUN=cumsum)
df$text_position <- (df$month_count * text_offset * df$dir) + ((df$Size+100)*df$dir)
# Prepare Timeline Range and Date Positioning
month_buffer <- 1
month_date_range <- seq(min(df$Peak) - months(month_buffer), max(df$Peak) + months(month_buffer), by='month')
month_format <- format(month_date_range, '%b')
month_df <- data.frame(Date=month_date_range-10, Month=month_format)
# Plot It
timeline_plot<-ggplot(data=df,
aes(x=Peak,y=0)) +
labs(col="Peak Date") + theme_classic() + geom_hline(yintercept=0,
color = "black", size=0.5)
# Plot Lollipops
timeline_plot<-timeline_plot+geom_segment(data=df,
aes(x=Peak, y=Size*dir,yend=0,xend=Peak),
size=0.2)
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0, color=Month), size=2) + scale_color_brewer(palette="Set1")
# Don't show axes, appropriately position legend
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") + guides(color=F, fill=F)
timeline_plot<-timeline_plot+geom_text(data=month_df, aes(x=Date,y=-1,label=Month),
size=2.5,hjust=1, color='black', angle=90)
timeline_plot<-timeline_plot + geom_text(data=df, aes(y=text_position,label=County),size=2.5, angle=45)
timeline_plot
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIRPeak <- readRData(paste0("./outputs/SEIR/",retrievablecounty,"covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
countySEIRPeak[[1]]$median
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,"covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
countySEIRPeak[[1]]
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,"covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
countySEIR[[1]]
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,"covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
countySEIR[[1]]$median
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,"covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR)
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR)
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR[[1]]$median)
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR[[1]])
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR[[1]])
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countySEIR <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
print(countySEIR[[1]])
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
stop()
}
}
# Prepare Cumulative Cases Plot
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
df <- data.frame(County=printablecounty, Time=daterange[countyI[[1]]], Cases=countyI[[1]]$summary$median)
# if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
#   peakData <- rbind(peakData, data.frame(printablecounty, daterange[median(countySEIRPeak[[1]]$peaktime)],daterange[median(countySEIcIscRPeak[[1]]$peaktime)], median(countySEIcIscRPeak[[1]]$peaksize), median(countySEIcIscRPeak[[1]]$peaksize)))
# }
stop()
}
}
countyI
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=3))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countySEIRPeak)==FALSE & is.na(countySEIcIscRPeak)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci)
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
head(incidenceTotals)
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=3))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci)
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
head(incidenceTotals)
aggregate(incidenceTotals, by=list("Time"))
aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum)
as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$UCI <- 0
allCounties$LCI <- 0
allCounties
incidenceTotals <- rbind(incidenceTotals, allCounties)
incidenceTotals
allCounties$County <- "All Counties"
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
incidenceTotals <- rbind(incidenceTotals, allCounties)
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI")
incidenceTotals <- rbind(incidenceTotals, allCounties)
head(incidenceTotals)
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=3))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci)
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI")
incidenceTotals <- rbind(incidenceTotals, allCounties)
save(incidenceTotals, file="../Florida_COVID19/data/incidenceTotals.rdata")
library(dplyr)
data <- incidenceTotals %>%
group_by(County) %>%
mutate(CumulativeCases = cumsum(Cases))
data
head(incidenceTotals)
aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County, incidenceTotals$Time), cumsum)
ggplot(data, aes(x=Group.2, y=x, fill=Group.1)) + geom_line()
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County, incidenceTotals$Time), cumsum)
ggplot(data, aes(x=Group.2, y=x, fill=Group.1)) + geom_line()
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County, incidenceTotals$Time), cumsum)
ggplot(data, aes(x=Group.2, y=x, fill=Group.1)) + geom_line()
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County=), cumsum)
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
data
head(data)
melt(data, by=c("Group.1"))
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=3))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci)
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI")
incidenceTotals <- rbind(incidenceTotals, allCounties)
save(incidenceTotals, file="../Florida_COVID19/data/incidenceTotals.rdata")
subset(incidenceTotals$County=="All Counties")
subset(incidenceTotals, incidenceTotals$County=="All Counties")
df <- subset(incidenceTotals, incidenceTotals$County=="All Counties")
df
# data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
cumsum(df$Cases)
# data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
plot(cumsum(df$Cases))
# data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
df
df <- subset(incidenceTotals, incidenceTotals$County=="All Counties")
# data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
data.frame(Time=df$Time, cumsum(df$Cases))
# data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County), cumsum)
df <- data.frame(Time=df$Time, cumsum(df$Cases))
head(df)
ggplot(df, aes(x=Time, y=cumsum.df.Cases.)) + geom_line()
ggplot(df, aes(x=Time, y=cumsum.df.Cases.)) + geom_line()
ggplot(df, aes(x=Time, y=cumsum.df.Cases.)) + geom_line() + geom_point()
data <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County, incidenceTotals$Time), cumsum)
data
df <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$County, incidenceTotals$Time), cumsum)
colnames(df) <- c("County","Time","Cases")
ggplot(df, aes(x=Time, y=Cases)) + geom_line()
df <- aggregate(incidenceTotals$Cases, by=c(incidenceTotals$Time), cumsum)
df <- aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), cumsum)
df
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=6))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci, CumSum=cumsum(countyI[[1]]$summary$median))
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
head(incidenceTotals)
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=6))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci, CumSum=cumsum(countyI[[1]]$summary$median))
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
allCounties$CumSum <- cumsum(allCounties$Cases)
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI","CumSum")
incidenceTotals <- rbind(incidenceTotals, allCounties)
save(incidenceTotals, file="../Florida_COVID19/data/incidenceTotals.rdata")
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
allCounties$CumSum <- cumsum(allCounties$x)
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI","CumSum")
incidenceTotals <- rbind(incidenceTotals, allCounties)
# Prepare Cumulative Cases Plot
incidenceTotals <- data.frame(matrix(NA, nrow=0, ncol=6))
for(i in 1:length(unique(popData$NAME))){
county=unique(popData$NAME)[i]
if(county!='Geographic Area Name'){
retrievablecounty <- str_replace(str_replace(county, ' County, Florida', ''),' ','_')
printablecounty <- str_replace(county, ' County, Florida', '')
countyI <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_IDurInf3.rdata"), retrievablecounty)
countyS <- readRData(paste0("./outputs/SEIR/",retrievablecounty,".covid_SDurInf3.rdata"), retrievablecounty)
# countySEIcIscRPeak <- readRData(paste0("./outputs/SEIcIscR/",retrievablecounty,".peaktime_DurInf3.rdata"), retrievablecounty)
if(is.na(countyI)==FALSE ){
df <- data.frame(County=printablecounty, Time=daterange, Cases=countyI[[1]]$summary$median, LCI=countyI[[1]]$summary$lci, UCI=countyI[[1]]$summary$uci, CumSum=cumsum(countyI[[1]]$summary$median))
incidenceTotals <- rbind(incidenceTotals, df)
}
}
}
allCounties <- as.data.frame(aggregate(incidenceTotals$Cases, by=list(incidenceTotals$Time), sum))
allCounties$County <- "All Counties"
allCounties$UCI <- 0
allCounties$LCI <- 0
allCounties$CumSum <- cumsum(allCounties$x)
colnames(allCounties) <- c("Time","Cases","County","UCI","LCI","CumSum")
incidenceTotals <- rbind(incidenceTotals, allCounties)
save(incidenceTotals, file="../Florida_COVID19/data/incidenceTotals.rdata")
ggplot(incidenceTotals, aes(x=Time, y=Cases, group="County")) + geom_line()
ggplot(incidenceTotals, aes(x=Time, y=CumSum, group="County")) + geom_line()
ggplot(incidenceTotals, aes(x=Time, y=CumSum, color="County")) + geom_line()
ggplot(incidenceTotals, aes(x=Time, y=CumSum, color=County)) + geom_line()
ggplot(incidenceTotals, aes(x=Time, y=CumSum, color=County)) + geom_line() + guides(fill=F, color=F)
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19")
length(words)
matrix(NA,nrow=5,ncol=5)
it<-matrix(NA,nrow=5,ncol=5)
bingo[3,3] <- "Free"
bingo<-matrix(NA,nrow=5,ncol=5)
bingo[3,3] <- "Free"
bingo
5*5
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx")
words
length(words)
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx","Guns","Mirror")
bingo<-matrix(NA,nrow=5,ncol=5)
bingo[3,3] <- "Free"
bingo
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx","Guns","Mirror",
"Repaint","House","Security")
length(words)
value <- sample(words,24)
value <- sample(words,24)
value
value <- sample(words,24)
matrix(value,nrow = 5,ncol = 5)
value <- sample(words,24)
matrix(value,nrow = 5,ncol = 5)
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx","Guns","Mirror",
"Repaint","House","Security")
value <- sample(words,24)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
bingo
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
}
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
print(bingo)
}
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
print(bingo)
print()
print()
}
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
print(bingo)
print("")
print("")
}
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx","Guns","Mirror",
"Repaint","House","Security")
get.seed()
words <- c("Zoom","Caronavirus","Sailing","School","Work","Quarentine","Curfew","Boat",
"Home Imporovement","Porch","Fan","Homeschool","Kitchen","Drink","The Castle","Ybor",
"Soup","Home Depot","Masks","COVID19","Amazon","Delivery","UPS","FedEx","Guns","Mirror",
"Repaint","House","Security","OnlyFans")
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
print(bingo)
print("")
print("")
}
for(i in 1:7){
value <- sample(words,25)
bingo <- matrix(value,nrow = 5,ncol = 5)
bingo[3,3] <- "Free"
print(bingo)
print("")
print("")
}
